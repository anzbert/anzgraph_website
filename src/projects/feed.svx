# Dog Food Timer and Remote Feeder

## Background

Knowing that your pet will get a tasty treat while you are away is quite reassuring and comforting. Especially when you can't make it home in time for the regular dinner-schedule. 

My girlfriend has an obsession with novelty enrichment feeding toys, and she had been eye balling timed feeders for a while. I found that they are pretty expensive for what they are, and surely this kind of thing can be DIY'ed ?! 

We already had a rotating treat dispenser from Kmart, which only releases kibbles when the dog presses a button. The vision was to add a timer function to that machine, as well as add another dispenser for larger treats, such as Kongs.

## Challenges

- Finding a way of storing and releasing larger food items like Kongs
- Translating an electrical signal to some kind of latch or rotator to dispense food
- Separate low voltage power delivery for the micro controller from the electromechanics (5V and 12V)
- Creating an easy to use UI with display and timer
- Interfacing with the external rotating feeder

#### Raspberry Pi Webcam Control

- Obvious security concerns when exposing a port of the home WiFi to the internet
- Handling an MJPG webcam stream efficiently on a low power device
- Limiting user rights in Linux for the feeder service
- Secure password login and GPIO control on a NodeJS server

## The Build

This project went through a number of iterations. First, I only built an Arduino-based timer with a display and an encoder as the input device. Initially it featured a gigantic bell in the middle, both huge in dimensions and in volume. The bell was supposed to be ringing when dinner was ready. It was quickly deemed to scary for the dog though and therefore removed to be used in another project.

The existing rotating Kibble feeder from K-mart was integrated by soldering a couple of cables to the internal activator switch. I mounted a 3.5mm socket to the case as a connection port through which the timer can trigger a food drop.

The control unit and the feeder were at first separate units and the long cables conecting the two made the device pretty inconvenient to use. That was simplified and improved later in a rebuild. And 

Finally, a Raspberry Pi with a NodeJS server and a webcam was added later on to make the feeder remotely controllable instead of just relying on a timer, for some extra dog feeding fun when out and about. Managing the webcam with internal routing to the Express server was time-consuming to get to work on the resource constrained Pi Zero. In the end, I made it work with a combination of the fantastic [MJPG Streamer](https://github.com/jacksonliam/mjpg-streamer) and an ExpressJS Server. A single port was opened in the home WiF and routed to the Pi Zero and a password login was included using a HTTP Authentication module.

### Materials

- 1x Arduino Pro Micro
- 1x Project Box
- 1x SSD1306 Display
- 1x Rotary Encoder
- 2x 12v Solenoids
- 2x Diodes for solenoids
- 2x 10K Ohm Pull-down Resistors for solenoids
- 3x Logic Level Transistor for 2 solenoids and triggering of 1 external dispenser
- 1x 3.5mm socket for control of external food dispenser from K-mart
- 1x 12v to 5v transformer unit
- 1x 12v power supply
- 1x Barrel plug socket for PSU
- 1x Female to Male Micro USB Panel Mount Adapter
- 2x Plastic Flower Pots
- 2x Hinges
- Wood / Cables / Bolts / Cable Ties / Chain & Hook

#### Pi Webcam Add-on

- 1x Switch to select Raspberry Pi Control of feeder
- 1x Pi Zero W
- 1x generic USB webcam

## Conclusion

The feeder works a treat (pun intended!), but there was a very unfortunate incident, where a Kong was dropped onto the dog's head in a remote feeding session. The dog has been scared of this spooky apparatus ever since. Bummer! It was a great project and we are trying to re-establish the superstitious animal's trust into the machine.

## Links

[Source: v1 Arduino Food Timer](https://github.com/anzbert/dog-timer)

[Source: v2 Raspberry Pi Remote Camera Feeder](https://github.com/anzbert/feedingPi)

[MJPG Streamer by Jackson Liam for Linux](https://github.com/jacksonliam/mjpg-streamer)
